name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push events
  push:
    branches: [ '**' ]
    tags-ignore: [ '**' ]

  # Triggers the workflow on pull request events
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Test on ${{matrix.name}}
    
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
  
    strategy:
      fail-fast: false  # false: try to complete all jobs
      
      matrix:
        build_type: [BIT]
        name:
          - linux gnu-10
          #- linux nvhpc-21.9
          #- linux intel
          
        include:

          - name: linux gnu-10
            os: ubuntu-20.04
            compiler: gnu-10
            compiler_cc: gcc-10
            compiler_cxx: g++-10
            compiler_fc: gfortran-10
            caching: true

          #- name: linux nvhpc-21.9
          #  os: ubuntu-20.04
          #  compiler: nvhpc-21.9
          #  compiler_cc: nvc
          #  compiler_cxx: nvc++
          #  compiler_fc: nvfortran
          #  caching: true

          #- name : linux intel
          #  os: ubuntu-20.04
          #  compiler: intel-oneapi
          #  compiler_cc: icc
          #  compiler_cxx: icpc
          #  compiler_fc: ifort
          #  caching: true

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Check-out dependencies as part of the bundle creation
      - name: Bundle create
        run: ./cloudsc-bundle create
        
      # Build the targets
      - name: Bundle build
        run: ./cloudsc-bundle build
        
      # Run the binary as a sanity check
      - name: Execute
        run: |
          cd build
          bin/dwarf-cloudsc-fortran
